СИ в linux  используeт библиотеку <stdio.h>
=======================================================================================================================================================
Вывод в консоль: printf("Текст %указываетсяКакойТипДанныхБудетВыводиться", переменные);
                 putchar(char); печатает один символ.
                 %d для целых чисел                  printf("N = %d", number); 
                 %ld для long
                 %f для вещественныйх чисел          printf("N = %f", number);
                 %o для восьмиричного числа.
                 %x для шестнадцатеричного числа.
                 %c для символа.
                 %s для строки символов.
                 %% для %
                 printf("%3d%6d", a, b); делают отступы 3 для целой части.
                 printf("%3.4f", a);     делает отступ 3 для целой части и 4 для десятичной.
                 printf("%.5f", a);      Делает отступы 0 для елой и 5 для десятичной.

                 \n переход на следущею строчку printf("\n");
                 \t знак табуляции
                 \b возврат на один символ назад     printf("123\b");  12
		 \" двойная кавычка                  printf("\"");     "
 		 \\ знак слэша                       printf("\\");     \
                 EOF константа конца файла.
=======================================================================================================================================================
Ввод в консоль: scanf();
                a = getchar(); считывает один символ.
=======================================================================================================================================================
Коментарии: коментируется область внутри    /*      */  
            коментируется до конца строки   //
=======================================================================================================================================================
Типы переменных: 
 
                 Если вычисляемы переменные разного типа то они
                 приводятся к одному типу, к такому который больше весит от int к float.
                 Для однозначного преобразования из int к float следует цифры писать в десятичным нулем.
                 
                 type name[size]; //массив
=======================================================================================================================================================
Циклы: while (Повторяется до тех пор пока истснно)           while (i<=0 and b>4)
         {                                                     {
                                                                printf("Hello");
         }                                                     }
-------------------------------------------------------------------------------------------------------------------------------------------------------
       for (индификация переменных; условие окончание цикла, пока истинно; действия над переменными)  for (int i, float a; i<1; i++)
         {                                                                                              {
                                                                                                         printf("Hello");
         }                                                                                              }
=======================================================================================================================================================
Условие: if (Если истино)    if (a<b) 
           {                  {
                               a+=b;
           }                  }
         else { }            else {  }
=======================================================================================================================================================
Предпроцесоры: #define имя значение         #define PI 3.14  Все PI в программе заменит на 3.14
=======================================================================================================================================================
Прибавление или отнимаение еденицы: префиксный  --i  ++i  
                                    постфиксный i--  i++  
=======================================================================================================================================================
Логические знаки: && в значении 'И' приоритет 1.
                  || в значении 'ИЛИ' приоритет 2.
=======================================================================================================================================================
Функции:
				
				
=======================================================================================================================================================
 
